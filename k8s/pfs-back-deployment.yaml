apiVersion: apps/v1
kind: Deployment
metadata:
  name: pfs-back-deployment
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec: 
      containers:
      - name: pfs-back
        image: studentroauis/pfs-back:v1
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
        env:
        - name: DB_PORT
          value: "5432"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: postgres-url
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-user
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        - name: CLOUD_NAME
          valueFrom:
            secretKeyRef:
              name: cloudinary-secret
              key: cloudinary-name
        - name: CLOUD_API_KEY
          valueFrom:
            secretKeyRef:
              name: cloudinary-secret
              key: cloudinary-api
        - name: CLOUD_API_SECRET
          valueFrom:
            secretKeyRef:
              name: cloudinary-secret
              key: cloudinary-api-key
---
apiVersion: v1
kind: Service
metadata:
  name: pfs-back-service
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 80 #Puerto que ingress usara
      targetPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: pfs-back-out-service
spec:
  type: NodePort
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30081